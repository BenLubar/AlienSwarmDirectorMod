@include "swarm.fgd"

@SolidClass base(trigger_multiple) = mod_dynaimic_difficulty_modifier_trigger: "Fires only if the Marines have reached the Difficulty Threshold"
[
	minDifficultyThreshold(integer) : "Minimum Difficulty Threshold" : 1 : "Min Threshold value."
	maxDifficultyThreshold(integer) : "Maximum Difficulty Threshold" : 3 : "Max Threshold value."
	maxTriggerFire(integer) : "Maximum Trigger Fire Count" : 1 : "Maximum number of times the trigger will recalculate player performance and fire a set of triggers.  Set to -1 to trigger infinetly"

	output OnTriggerEasy(void) : "Fires if the marine(s) are at an Easy difficulty level."
	output OnTriggerMedium(void) : "Fires if the marine(s) are at an Medium difficulty level."
	output OnTriggerHard(void) : "Fires if the marine(s) are at an Hard difficulty level."
	output OnTriggerAtleastEasy(void) : "Fires if the marine(s) are atleast at an Easy difficulty level. Ie, always fires."
	output OnTriggerAtleastMedium(void) : "Fires if the marine(s) are atleast at an Medium difficulty level. Ie fires when performance is 2 or 3."
	output OnTriggerAtleastHard(void) : "Fires if the marine(s) are atleast at an Hard difficulty level.  Ie, fires when performance is 3."
	input SetMaxFireCount(integer) : "Sets the Max Fire Count and resets the number of times the trigger has fired to 0."
	
]

@SolidClass base(trigger_asw_door_area) = mod_dynamic_door_area :
	"Mod of trigger_asw_door_area that supports difficulty threshold requirements"
[

	minDifficultyThreshold(integer) : "Minimum Difficulty Threshold" : 1 : "Min Threshold value."
	maxDifficultyThreshold(integer) : "Maximum Difficulty Threshold" : 3 : "Max Threshold value."

]

@PointClass base(Targetname, ASWObjective) iconsprite("editor/asw_objective_escape.vmt") = mod_objective_escape : 
	"Alien Swarm Escape Objective"
[
    objectivetitle(string) : "Objective Title" : "" : "Title to use for this objective in the list on the briefing screen, or in-game for the current objective HUD display."
	input MarineInEscapeArea(void) : "MarineInEscapeArea"
]

@PointClass base(Targetname, EnableDisable) iconsprite("editor/asw_objective_dummy.vmt") = mod_marker : 
	"Alien Swarm Mission Marker"
[
	objectivename(target_destination) : "Objective Name" : "" : "Name of the target object this is associated with."
	mapwidth(integer) : "Map Width" : 256 : "Size of the map marker in world units."
	mapheight(integer) : "Map Height" : 256 : "Size of the map marker in world units."
	
	input SetComplete(void) : "Mark as complete."
]

@PointClass base(Targetname) iconsprite("editor/asw_objective_dummy.vmt") = mod_build_mission_map_for_next_mission: 
	"Builds the mission map for the next mission"
[	
	input Activate(void) : "Begins building the mission map for the next mission."
]

@BaseClass base(Targetname, Angles) = ASWSpawnEntity
[
	alien_name(target_source) : "Alien name" : "" : "Target name to give spawned aliens."
	wait_for_input(boolean) : "Wait for input" : 0 : "Wait for the Enable input before spawning."
	allow_long_think(boolean) : "Think outside of PVS" : 0 : "Spawned aliens think even when no marine is nearby."
	start_distance(float) : "Distance to start spawning" : "-1" : "If a marine is this close, start spawning unless we're waiting for input. -1 means the whole map."
	stop_distance(float) : "Distance to stop spawning" : "-1" : "If all marines are farther away than this, stop spawning. -1 means the whole map."

	max_aliens_live_0(integer) : "Max live aliens on Easy difficulty" : 1 : "-1 for infinite."
	max_aliens_live_1(integer) : "Max live aliens on Normal difficulty" : 1 : "-1 for infinite."
	max_aliens_live_2(integer) : "Max live aliens on Hard difficulty" : 1 : "-1 for infinite."
	max_aliens_live_3(integer) : "Max live aliens on Insane difficulty" : 1 : "-1 for infinite."
	max_aliens_live_4(integer) : "Max live aliens on Brutal difficulty" : 1 : "-1 for infinite."
	max_aliens_spawned_0(integer) : "Max non-director aliens on Easy difficulty" : 1 : "-1 for infinite."
	max_aliens_spawned_1(integer) : "Max non-director aliens on Normal difficulty" : 1 : "-1 for infinite."
	max_aliens_spawned_2(integer) : "Max non-director aliens on Hard difficulty" : 1 : "-1 for infinite."
	max_aliens_spawned_3(integer) : "Max non-director aliens on Insane difficulty" : 1 : "-1 for infinite."
	max_aliens_spawned_4(integer) : "Max non-director aliens on Brutal difficulty" : 1 : "-1 for infinite."
	max_aliens_director_0(integer) : "Max director aliens on Easy Onslaught difficulty" : 1 : "-1 for infinite."
	max_aliens_director_1(integer) : "Max director aliens on Normal Onslaught difficulty" : 1 : "-1 for infinite."
	max_aliens_director_2(integer) : "Max director aliens on Hard Onslaught difficulty" : 1 : "-1 for infinite."
	max_aliens_director_3(integer) : "Max director aliens on Insane Onslaught difficulty" : 1 : "-1 for infinite."
	max_aliens_director_4(integer) : "Max director aliens on Brutal Onslaught difficulty" : 1 : "-1 for infinite."

	min_spawn_interval(float) : "Minimum time between spawns" : "3" : ""
	max_spawn_interval(float) : "Maximum time between spawns" : "5" : ""

	aliens_flame(boolean) : "Aliens are flammable" : 1 : ""
	aliens_stun(boolean) : "Aliens are stunnable" : 1 : "(Electricity)"
	aliens_freeze(boolean) : "Aliens are freezable" : 1 : ""
	aliens_flinch(boolean) : "Aliens flinch when damaged" : 1 : ""

	health_scale(float) : "Health scale" : "1" : "Must be greater than 0."
	size_scale(float) : "Size scale" : "1" : "Must be greater than 0."
	speed_scale(float) : "Speed scale" : "1" : "Must be greater than 0."

	max_yaw(float) : "Random Rotation" : "0" : "Maximum random rotation on yaw (degrees)."
	max_forward(float) : "Random Front-Back" : "0" : "Maximum random shift forward or backward."
	max_side(float) : "Random Left-Right" : "0" : "Maximum random shift left or right."

	input Enable(void) : "Enable this entity."
	input Disable(void) : "Disable this entity."
	input Toggle(void) : "Toggle between enabled and disabled."

	output OnSpawned(void) : "Non-director alien spawned."
	output OnAnySpawned(void) : "Any alien spawned."
	output OnDirectorSpawned(void) : "Director alien spawned."
	output OnAllSpawned(void) : "Spawner exhausted of non-director aliens."
	output OnAllSpawnedDead(void) : "Spawned all non-director aliens and they all died."
]

@PointClass base(ASWSpawnEntity) studioprop("models/editor/asw_spawner/asw_spawner.mdl") color(0 0 255) = asw_spawn_offscreen :
	"Alien spawn (offscreen)"
[
	move_to_marines(boolean) : "Move to marines" : 0 : "When an alien spawns, should they move to the nearest marine or just loiter until someone comes close?"
	min_distance(float) : "Minimum distance" : "720" : "Stop spawning if a marine is this close or closer."

	spawn_chance_0(float) : "Chance of spawning asw_drone" : "1" : "Relative to other aliens."
	spawn_chance_1(float) : "Chance of spawning asw_buzzer" : "1" : "Relative to other aliens."
	spawn_chance_2(float) : "Chance of spawning asw_parasite" : "1" : "Relative to other aliens."
	spawn_chance_3(float) : "Chance of spawning asw_shieldbug" : "1" : "Relative to other aliens."
	spawn_chance_4(float) : "Chance of spawning asw_grub" : "1" : "Relative to other aliens."
	spawn_chance_5(float) : "Chance of spawning asw_drone_jumper" : "1" : "Relative to other aliens."
	spawn_chance_6(float) : "Chance of spawning asw_harvester" : "1" : "Relative to other aliens."
	spawn_chance_7(float) : "Chance of spawning asw_parasite_defanged" : "1" : "Relative to other aliens."
	spawn_chance_8(float) : "Chance of spawning asw_queen" : "0" : "Relative to other aliens."
	spawn_chance_9(float) : "Chance of spawning asw_boomer" : "1" : "Relative to other aliens."
	spawn_chance_10(float) : "Chance of spawning asw_ranger" : "1" : "Relative to other aliens."
	spawn_chance_11(float) : "Chance of spawning asw_mortarbug" : "1" : "Relative to other aliens."
	spawn_chance_12(float) : "Chance of spawning asw_shaman" : "1" : "Relative to other aliens."
	spawn_chance_13(float) : "Chance of spawning asw_drone_redgiant" : "1" : "Relative to other aliens."
	spawn_chance_14(float) : "Chance of spawning asw_drone_ghost" : "1" : "Relative to other aliens."
	spawn_chance_15(float) : "Chance of spawning asw_drone_carrier" : "1" : "Relative to other aliens."
	spawn_chance_16(float) : "Chance of spawning asw_drone_summoner" : "1" : "Relative to other aliens."
]

@PointClass base(ASWSpawnEntity) studioprop("models/editor/asw_spawner/asw_spawner.mdl") color(0 0 255) = asw_spawn_burrow :
	"Alien spawn (burrow)"
[
	spawn_chance_0(float) : "Chance of spawning asw_drone" : "1" : "Relative to other aliens."
	spawn_chance_5(float) : "Chance of spawning asw_drone_jumper" : "1" : "Relative to other aliens."
	spawn_chance_10(float) : "Chance of spawning asw_ranger" : "1" : "Relative to other aliens."
	spawn_chance_13(float) : "Chance of spawning asw_drone_redgiant" : "1" : "Relative to other aliens."
	spawn_chance_14(float) : "Chance of spawning asw_drone_ghost" : "1" : "Relative to other aliens."
	spawn_chance_15(float) : "Chance of spawning asw_drone_carrier" : "1" : "Relative to other aliens."
	spawn_chance_16(float) : "Chance of spawning asw_drone_summoner" : "1" : "Relative to other aliens."
]

@PointClass base(ASWSpawnEntity) studioprop("models/editor/asw_spawner/asw_spawner.mdl") color(0 0 255) = asw_spawn_hallway :
	"Alien spawn (hallway)"
[
	spawn_chance_9(float) : "Chance of spawning asw_boomer" : "1" : "Relative to other aliens."
	spawn_chance_11(float) : "Chance of spawning asw_mortarbug" : "1" : "Relative to other aliens."
]

@PointClass base(ASWSpawnEntity) studioprop("models/editor/asw_spawner/asw_spawner.mdl") color(0 0 255) = asw_spawn_wall :
	"Alien spawn (wall)"
[
	vent_is_high(boolean) : "Vent is high" : 0 : "If yes, only drones can spawn."

	spawn_chance_0(float) : "Chance of spawning asw_drone" : "1" : "Relative to other aliens."
	spawn_chance_5(float) : "Chance of spawning asw_drone_jumper" : "1" : "Relative to other aliens."
	spawn_chance_9(float) : "Chance of spawning asw_boomer" : "1" : "Relative to other aliens."
	spawn_chance_13(float) : "Chance of spawning asw_drone_redgiant" : "1" : "Relative to other aliens."
	spawn_chance_14(float) : "Chance of spawning asw_drone_ghost" : "1" : "Relative to other aliens."
	spawn_chance_15(float) : "Chance of spawning asw_drone_carrier" : "1" : "Relative to other aliens."
	spawn_chance_16(float) : "Chance of spawning asw_drone_summoner" : "1" : "Relative to other aliens."
]

@PointClass base(ASWSpawnEntity) studioprop("models/editor/asw_spawner/asw_spawner.mdl") color(0 0 255) = asw_spawn_railing :
	"Alien spawn (railing)"
[
	railing_is_high(boolean) : "Railing is high" : 0 : "If yes, only drones can spawn."

	spawn_chance_0(float) : "Chance of spawning asw_drone" : "1" : "Relative to other aliens."
	spawn_chance_5(float) : "Chance of spawning asw_drone_jumper" : "1" : "Relative to other aliens."
	spawn_chance_10(float) : "Chance of spawning asw_ranger" : "1" : "Relative to other aliens."
	spawn_chance_13(float) : "Chance of spawning asw_drone_redgiant" : "1" : "Relative to other aliens."
	spawn_chance_14(float) : "Chance of spawning asw_drone_ghost" : "1" : "Relative to other aliens."
	spawn_chance_15(float) : "Chance of spawning asw_drone_carrier" : "1" : "Relative to other aliens."
	spawn_chance_16(float) : "Chance of spawning asw_drone_summoner" : "1" : "Relative to other aliens."
]

@PointClass base(ASWSpawnEntity) studioprop("models/editor/asw_spawner/asw_spawner.mdl") color(0 0 255) = asw_spawn_jump :
	"Alien spawn (jump)"
[
	jump_height(choices) : "Jump height" : 4 : "" =
	[
		0 : "Low"
		1 : "Medium"
		2 : "High"
		3 : "Offscreen (short)"
		4 : "Offscreen (long)"
	]

	spawn_chance_0(float) : "Chance of spawning asw_drone" : "1" : "Relative to other aliens."
	spawn_chance_5(float) : "Chance of spawning asw_drone_jumper" : "1" : "Relative to other aliens."
	spawn_chance_13(float) : "Chance of spawning asw_drone_redgiant" : "1" : "Relative to other aliens."
	spawn_chance_14(float) : "Chance of spawning asw_drone_ghost" : "1" : "Relative to other aliens."
	spawn_chance_15(float) : "Chance of spawning asw_drone_carrier" : "1" : "Relative to other aliens."
	spawn_chance_16(float) : "Chance of spawning asw_drone_summoner" : "1" : "Relative to other aliens."
]
